// This file has been autogenerated from a class added in the UI designer.

using System;

using MonoTouch.Foundation;
using MonoTouch.UIKit;
using System.Xml.Linq;
using System.Linq;
using System.IO;
using Mono.Data.Sqlite;


namespace StoryboardTables
{
	public partial class XTEST : UIViewController
   {      
      public string SubeSistemi { get; set;}
      string SQLitePath = Path.Combine(Environment.GetFolderPath(Environment.SpecialFolder.Personal), "IDBDBXZ.db3");

		public XTEST (IntPtr handle) : base (handle)
		{
		
      }

      public override void PrepareForSegue (UIStoryboardSegue segue, NSObject sender)
      {
         if (segue.Identifier == "dataGecisi") { // set in Storyboard

            var navctlr = segue.DestinationViewController as RootViewController;

            navctlr.SubeVerisi = SubeSistemi;
         }

      }

      public override void ViewDidLoad()
      {
         base.ViewDidLoad();

         text.Text = SubeSistemi;
         ccccc.TouchUpInside+= delegate
         {
            this.PerformSegue("dataGecisi", this);

         };
         dbVeriEkle.TouchUpInside+=delegate {
            InsertData(SQLitePath);
         };

         dbTabloOlustur.TouchUpInside+= delegate {
            CreateDB(SQLitePath);
        };
      }

      public void CreateDB(string databaseFile)
      {if (!File.Exists(databaseFile))
         {

            // Create the database
            SqliteConnection.CreateFile(databaseFile);
            Console.Write("vt oluşturuldu");
         }
         else
            Console.Write("vt mevcut");


         try
         { 


            // Connect to the database
            using (SqliteConnection sqlCon = new SqliteConnection (String.Format ("Data Source = {0};", databaseFile))) 
            {
               sqlCon.Open ();

               // Create a table
               using (SqliteCommand sqlCom = new SqliteCommand (sqlCon))
               {

                  if(SubeSistemi=="Y")

                  sqlCom.CommandText = "CREATE TABLE IF NOT EXISTS EMIRLERY (ID INTEGER PRIMARY KEY, Title VARCHAR(20), Subject VARCHAR(20), PostDate VARCHAR(20), ImgUrl VARCHAR(20), DocAdress  VARCHAR(20), Sube VARCHAR(11))";
                
                    else if(SubeSistemi=="Z") {
                     sqlCom.CommandText = "CREATE TABLE IF NOT EXISTS EMIRLERZ (ID INTEGER PRIMARY KEY, Title VARCHAR(20), Subject VARCHAR(20), PostDate VARCHAR(20), ImgUrl VARCHAR(20), DocAdress  VARCHAR(20), Sube VARCHAR(11))";

                  }
                  else if (SubeSistemi=="X") {
                     sqlCom.CommandText = "CREATE TABLE IF NOT EXISTX EMIRLERX (ID INTEGER PRIMARY KEY, Title VARCHAR(20), Subject VARCHAR(20), PostDate VARCHAR(20), ImgUrl VARCHAR(20), DocAdress  VARCHAR(20), Sube VARCHAR(11))";

                  }


                  sqlCom.ExecuteNonQuery ();

                  Console.WriteLine(sqlCom.ExecuteNonQuery());
               }
               //end using sqlCom

               sqlCon.Close ();

            }
            //end using sqlCon

            this.durumF.Text = "hazır!";




         } catch (Exception ex)
         {

            this.durumF.Text = String.Format ("Sqlite error: {0}", ex.Message);

         }//end try catch
      }


      private void InsertData (string databaseFile)
      {

         try
         {

            if (!File.Exists (databaseFile))
            {

               this.durumF.Text = "Database file does not exist. Tap the appropriate button to create it.";
               return;

            }
            //end if

            // Connect to database
            using (SqliteConnection sqlCon = new SqliteConnection (String.Format ("Data Source = {0}", databaseFile)))
            {

               sqlCon.Open ();

               using (SqliteCommand sqlCom = new SqliteCommand (sqlCon))
               {


                  string documentsPath = Environment.GetFolderPath(Environment.SpecialFolder.Personal);
                  string localFilename = "mobelsis.xml";
                  string localPath = Path.Combine(documentsPath, localFilename);

                  XDocument doc = XDocument.Load(localPath);

                  if ( SubeSistemi=="Y")
                  {

                  var data = from x in doc.Descendants("item") where x.Element("sube").Value == "Y"
                             select new {
                     title = x.Element("baslik").Value,
                     icerik = x.Element("icerik").Value,
                     urlBilgisi = x.Element("urlBilgisi").Value,
                     imgUrl = x.Element("imgUrl").Value,
                     tarih= x.Element("tarih").Value,
                     sube = x.Element("sube").Value};



                  foreach (var p in data)
                  {





                     sqlCom.CommandText = "INSERT INTO EMIRLERY (Title, Subject, PostDate, ImgUrl, DocAdress, Sube) VALUES (@firstName, @lastName,@date, @imgurl, @docadress, @sube)";
                     sqlCom.Parameters.Add (new SqliteParameter ("@firstName", p.title));
                     sqlCom.Parameters.Add (new SqliteParameter ("@lastName", p.icerik));
                  sqlCom.Parameters.Add (new SqliteParameter ("@date", DateTime.Now.Hour+":"+DateTime.Now.Minute+ " " + DateTime.Now.Day+":"+DateTime.Now.Month));
                     sqlCom.Parameters.Add (new SqliteParameter ("@imgurl", p.imgUrl));
                     sqlCom.Parameters.Add (new SqliteParameter ("@docadress", p.urlBilgisi));
                     sqlCom.Parameters.Add (new SqliteParameter ("@sube", p.sube));

                     sqlCom.ExecuteNonQuery ();
                        this.durumF.Text =SubeSistemi +" Veriler Girdi";

                  }
                  }

                  else if (SubeSistemi=="Z") {
                     var data = from x in doc.Descendants("item") where x.Element("sube").Value == "Z"
                                   select new {
                        title = x.Element("baslik").Value,
                        icerik = x.Element("icerik").Value,
                        urlBilgisi = x.Element("urlBilgisi").Value,
                        imgUrl = x.Element("imgUrl").Value,
                        tarih= x.Element("tarih").Value,
                        sube = x.Element("sube").Value};



                     foreach (var p in data)
                     {





                        sqlCom.CommandText = "INSERT INTO EMIRLERZ (Title, Subject, PostDate, ImgUrl, DocAdress, Sube) VALUES (@firstName, @lastName,@date, @imgurl, @docadress, @sube)";
                        sqlCom.Parameters.Add (new SqliteParameter ("@firstName", p.title));
                        sqlCom.Parameters.Add (new SqliteParameter ("@lastName", p.icerik));
                        sqlCom.Parameters.Add (new SqliteParameter ("@date", DateTime.Now.Hour+":"+DateTime.Now.Minute+ " " + DateTime.Now.Day+":"+DateTime.Now.Month));
                        sqlCom.Parameters.Add (new SqliteParameter ("@imgurl", p.imgUrl));
                        sqlCom.Parameters.Add (new SqliteParameter ("@docadress", p.urlBilgisi));
                        sqlCom.Parameters.Add (new SqliteParameter ("@sube", p.sube));

                        sqlCom.ExecuteNonQuery ();
                        this.durumF.Text =SubeSistemi +" Veriler Girdi";

                     }
                  }
                  else if(SubeSistemi=="X")
                  {
                     var data = from x in doc.Descendants("item") where x.Element("sube").Value == "X"
                                   select new {
                        title = x.Element("baslik").Value,
                        icerik = x.Element("icerik").Value,
                        urlBilgisi = x.Element("urlBilgisi").Value,
                        imgUrl = x.Element("imgUrl").Value,
                        tarih= x.Element("tarih").Value,
                        sube = x.Element("sube").Value};



                     foreach (var p in data)
                     {





                        sqlCom.CommandText = "INSERT INTO EMIRLERX (Title, Subject, PostDate, ImgUrl, DocAdress, Sube) VALUES (@firstName, @lastName,@date, @imgurl, @docadress, @sube)";
                        sqlCom.Parameters.Add (new SqliteParameter ("@firstName", p.title));
                        sqlCom.Parameters.Add (new SqliteParameter ("@lastName", p.icerik));
                        sqlCom.Parameters.Add (new SqliteParameter ("@date", DateTime.Now.Hour+":"+DateTime.Now.Minute+ " " + DateTime.Now.Day+":"+DateTime.Now.Month));
                        sqlCom.Parameters.Add (new SqliteParameter ("@imgurl", p.imgUrl));
                        sqlCom.Parameters.Add (new SqliteParameter ("@docadress", p.urlBilgisi));
                        sqlCom.Parameters.Add (new SqliteParameter ("@sube", p.sube));

                        sqlCom.ExecuteNonQuery ();
                        this.durumF.Text =SubeSistemi +" Veriler Girdi";

                     }
                  }


               }
               //end using sqlCom

               sqlCon.Close ();

            }
            //end using sqlCon

            this.durumF.Text +=  "Veriler Girdi";

         } catch (Exception ex)
         {

            this.durumF.Text = String.Format ("Sqlite error: {0}", ex.Message);

         }//end try catch

      }//end void InsertData



	}
}
