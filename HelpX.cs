// This file has been autogenerated from a class added in the UI designer.

using System;

using MonoTouch.Foundation;
using MonoTouch.UIKit;
using MonoTouch.AVFoundation;

namespace StoryboardTables
{
	public partial class HelpX : UIViewController
	{
		public HelpX (IntPtr handle) : base (handle)
		{
		}

      public override void ViewDidLoad()
      {
         base.ViewDidLoad();


         StartRecg.TouchUpInside += delegate
         {
           
//            var speechSynthesizer = new AVSpeechSynthesizer();
//            var speechUtterence = new AVSpeechUtterance("Merhabalar, Geliştiricim Mustafa Haluk YILMAZ, istihbarat daire başkanlığına hizmet etmek için geliştirildim. Sizlere hizmet vermekten dolayı çok mutluyum. İyi Günler Dilerim");
//
//            speechSynthesizer.SpeakUtterance(speechUtterence);
            Speak(okunacakBolge.Text);


         };




      }

      void Speak (string text)
      {
         var speechSynthesizer = new AVSpeechSynthesizer ();

//                        var voices = AVSpeechSynthesisVoice.GetSpeechVoices ();

         var speechUtterance = new AVSpeechUtterance (text) {
            Rate = AVSpeechUtterance.MaximumSpeechRate/4,
            Voice = AVSpeechSynthesisVoice.FromLanguage ("tr-TR"),
            Volume = volume,
            PitchMultiplier = pitch
         };

         speechSynthesizer.SpeakUtterance (speechUtterance);
      }

      float volume = 0.5f;
      float pitch = 1.0f;
                 void InitPitchAndVolume ()
                {
         sesBari.MinValue = 0;
         sesBari.MaxValue = 1.0f;
         sesBari.SetValue (volume, false);

         sesBari.MinValue = 0.5f;
         sesBari.MaxValue = 2.0f;
         sesBari.SetValue (pitch, false);

         sesBari.ValueChanged += (sender, e) => {
            volume = sesBari.Value;
                        };

         sesBari.ValueChanged += (sender, e) => {
            pitch = sesBari.Value;
                        };
                }

	}
}
